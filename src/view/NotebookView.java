package view;

import java.time.LocalDateTime;
import java.util.List;

/**
 * Интерфейс, описывающий представление для работы с заметками.
 * Данный интерфейс отделяет логику представления от бизнес-логики, обеспечивая
 * гибкость в выборе способов отображения данных (например, консоль или GUI).
 * 
 * Методы интерфейса используются для отображения заметок, получения пользовательского ввода,
 * а также для показа сообщений пользователю.
 */
public interface NotebookView {

    /**
     * Метод для отображения списка заметок.
     * 
     * @param notes Список заметок, которые необходимо отобразить.
     *              Заметки могут быть отсортированы или отфильтрованы по различным критериям.
     */
    void showNotes(List<Note> notes);

    /**
     * Метод для отображения сообщения пользователю.
     * 
     * @param message Сообщение, которое должно быть выведено на экран.
     *                Используется для информирования пользователя о результатах операций
     *                или об ошибках.
     */
    void showMessage(String message);

    /**
     * Метод для получения даты и времени от пользователя.
     * 
     * @return Введенная пользователем дата и время.
     *         Данный метод позволяет пользователю вводить временные параметры для фильтрации
     *         или добавления заметок.
     */
    LocalDateTime getDateTimeInput();

    /**
     * Метод для получения описания заметки от пользователя.
     * 
     * @return Введенное описание заметки.
     *         Описание может быть любым текстом, описывающим событие или задачу.
     */
    String getDescriptionInput();

    /**
     * Метод для получения имени файла для сохранения или загрузки данных.
     * 
     * @return Введенное пользователем имя файла.
     *         Этот метод используется для работы с сохраненными данными, позволяя пользователю
     *         выбирать или указывать путь для файла.
     */
    String getFileNameInput();
}
